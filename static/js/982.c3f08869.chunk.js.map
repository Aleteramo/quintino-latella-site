{"version":3,"file":"static/js/982.c3f08869.chunk.js","mappings":"8RAMA,MAoKMA,EAAgBC,IAAc,IAAb,IAAEC,GAAKD,EAC5B,MAAME,GAAUC,EAAAA,EAAAA,WAEhBC,EAAAA,EAAAA,IAAS,KACHF,EAAQG,UACVH,EAAQG,QAAQC,SAASC,GAAK,IAC9BL,EAAQG,QAAQC,SAASE,GAAK,IAChC,IAUF,OACEC,EAAAA,EAAAA,MAAA,QAAMC,IAAKR,EAASS,MAAO,CAAC,GAAK,GAAK,IAAKC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,kBAAgBC,KAAM,CAAC,EAAG,GAAI,OAC9BD,EAAAA,EAAAA,KAAA,wBAAsBE,MATpBd,EAAM,KAAa,OACnBA,EAAM,GAAW,QACjBA,EAAM,GAAW,SACd,SAOLY,EAAAA,EAAAA,KAAA,gBAAcG,UAAW,MACzBH,EAAAA,EAAAA,KAAA,cAAYI,SAAU,CAAC,GAAI,GAAI,QAC1B,EAILC,EAAsBA,KAC1B,MAAMC,EAAO,GACb,IAAK,IAAIC,GAAK,IAAKA,GAAK,IAAKA,GAAK,IAChCD,EAAKE,KAAK,CACRC,KAAMF,EAAI,EAAI,GAAGA,IAAM,IAAIA,IAC3BG,SAAU,IAAOH,IAGrB,OAAOD,CAAI,EAGb,EA1MsBK,KACpB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,MAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAS,KACxBK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,SAC9BO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,aAC5C1B,EAAKmC,IAAUT,EAAAA,EAAAA,UAAS,OACxBJ,EAAUc,IAAeV,EAAAA,EAAAA,UAAS,OAClCW,EAAaC,IAAkBZ,EAAAA,EAAAA,WAAS,GAEzCa,GAAeC,EAAAA,EAAAA,cAAY,KAE/BL,GADiBR,GAAWH,EAAS,KAAQA,EAAS,OACtCiB,QAAQ,GAAG,GAC1B,CAACd,EAAQH,IAENkB,GAAoBF,EAAAA,EAAAA,cAAY,KACpC,IAAIG,EAEFA,EADa,SAAXZ,EACI,OAAU,OAASJ,EAAW,MAAQH,EAAW,MAAQK,EAEzD,QAAW,MAAQF,EAAW,MAAQH,EAAW,KAAQK,EAWjEO,EAAYQ,KAAKC,MAAMF,EARC,CACtBG,UAAW,IACXC,MAAO,MACPC,SAAU,KACVC,OAAQ,MACRC,WAAY,KAG+BjB,IAAgB,GAC5D,CAACN,EAAQH,EAAQK,EAAKE,EAAQE,KAEjCkB,EAAAA,EAAAA,YAAU,KACRZ,IACAG,GAAmB,GAClB,CAACH,EAAcG,IAOlB,OACElC,EAAAA,EAAAA,MAAA,OAAK4C,GAAG,iBAAiBC,UAAU,iBAAgB1C,SAAA,EACjDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2CACJH,EAAAA,EAAAA,MAAA,OAAK6C,UAAU,uBAAsB1C,SAAA,EACnCH,EAAAA,EAAAA,MAAA,QAAM8C,SATUC,IACpBA,EAAEC,iBACFlB,GAAe,EAAK,EAOa3B,SAAA,EAC3BH,EAAAA,EAAAA,MAACiD,EAAAA,EAAOC,IAAG,CAACL,UAAU,cAAcM,WAAY,CAAEjD,MAAO,MAAOC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,SAAQjD,SAAC,kBACxBC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,SACLT,GAAG,SACHU,MAAOtC,EACPuC,SAAWR,GAAM9B,EAAU8B,EAAES,OAAOF,aAGxCtD,EAAAA,EAAAA,MAACiD,EAAAA,EAAOC,IAAG,CAACL,UAAU,cAAcM,WAAY,CAAEjD,MAAO,MAAOC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,SAAQjD,SAAC,eACxBC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,SACLT,GAAG,SACHU,MAAOnC,EACPoC,SAAWR,GAAM3B,EAAU2B,EAAES,OAAOF,aAGxCtD,EAAAA,EAAAA,MAACiD,EAAAA,EAAOC,IAAG,CAACL,UAAU,cAAcM,WAAY,CAAEjD,MAAO,MAAOC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,MAAKjD,SAAC,YACrBC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,SACLT,GAAG,MACHU,MAAOjC,EACPkC,SAAWR,GAAMzB,EAAOyB,EAAES,OAAOF,aAGrCtD,EAAAA,EAAAA,MAACiD,EAAAA,EAAOC,IAAG,CAACL,UAAU,cAAcM,WAAY,CAAEjD,MAAO,MAAOC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPH,EAAAA,EAAAA,MAAA,OAAK6C,UAAU,cAAa1C,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,QACLT,GAAG,OACHU,MAAM,OACNG,QAAoB,SAAXlC,EACTgC,SAAWR,GAAMvB,EAAUuB,EAAES,OAAOF,UAEtClD,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,OAAMjD,SAAC,aACtBC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,QACLT,GAAG,SACHU,MAAM,SACNG,QAAoB,WAAXlC,EACTgC,SAAWR,GAAMvB,EAAUuB,EAAES,OAAOF,UAEtClD,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,SAAQjD,SAAC,mBAG5BH,EAAAA,EAAAA,MAACiD,EAAAA,EAAOC,IAAG,CAACL,UAAU,cAAcM,WAAY,CAAEjD,MAAO,MAAOC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,WAAUjD,SAAC,4BAC1BH,EAAAA,EAAAA,MAAA,UACE4C,GAAG,WACHU,MAAO7B,EACP8B,SAAWR,GAAMrB,EAAiBqB,EAAES,OAAOF,OAAOnD,SAAA,EAElDC,EAAAA,EAAAA,KAAA,UAAQkD,MAAM,YAAWnD,SAAC,gBAC1BC,EAAAA,EAAAA,KAAA,UAAQkD,MAAM,QAAOnD,SAAC,yBACtBC,EAAAA,EAAAA,KAAA,UAAQkD,MAAM,WAAUnD,SAAC,0BACzBC,EAAAA,EAAAA,KAAA,UAAQkD,MAAM,SAAQnD,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQkD,MAAM,aAAYnD,SAAC,wBAG/BC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAOS,OAAM,CACZL,KAAK,SACLF,WAAY,CAAEjD,MAAO,KACrByD,SAAU,CAAEzD,MAAO,IAAMC,SAC1B,gBAIHC,EAAAA,EAAAA,KAACwD,EAAAA,EAAe,CAAAzD,SACb0B,IACC7B,EAAAA,EAAAA,MAACiD,EAAAA,EAAOC,IAAG,CACTL,UAAU,UACVgB,QAAS,CAAEC,QAAS,EAAG/D,EAAG,IAC1BgE,QAAS,CAAED,QAAS,EAAG/D,EAAG,GAC1BiE,KAAM,CAAEF,QAAS,EAAG/D,GAAI,IAAKI,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,oBAAeX,MAClBQ,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,gDAA2CW,EAAS,YACvDV,EAAAA,EAAAA,KAAA,OAAKyC,UAAU,iBAAgB1C,UAC7BC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAM,CAAA9D,UACLC,EAAAA,EAAAA,KAACd,EAAa,CAACE,IAAKA,SAGxBY,EAAAA,EAAAA,KAAA,OAAKyC,UAAU,kBAAiB1C,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAmB,CAACC,MAAM,OAAOnD,OAAO,OAAMb,UAC7CH,EAAAA,EAAAA,MAACoE,EAAAA,EAAS,CAAC1D,KAAMD,IAAsBN,SAAA,EACrCC,EAAAA,EAAAA,KAACiE,EAAAA,EAAa,CAACC,gBAAgB,SAC/BlE,EAAAA,EAAAA,KAACmE,EAAAA,EAAK,CAACC,QAAQ,UACfpE,EAAAA,EAAAA,KAACqE,EAAAA,EAAK,KACNrE,EAAAA,EAAAA,KAACsE,EAAAA,EAAO,KACRtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAI,CAACtB,KAAK,WAAWmB,QAAQ,WAAWI,OAAO,oBAItDxE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO4B,EAAC,CACPC,KAAK,oFACLtB,OAAO,SACPuB,IAAI,sBACJlC,UAAU,aACVM,WAAY,CAAEjD,MAAO,MACrByD,SAAU,CAAEzD,MAAO,KAAOC,SAC3B,oDAOL,EC1JV,EATgB6E,KAEZhF,EAAAA,EAAAA,MAAA,OAAK6C,UAAU,WAAU1C,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAACW,EAAa,M","sources":["components/BMICalculator.js","components/BMIPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport './BMICalculator.css';\n\nconst BMICalculator = () => {\n  const [height, setHeight] = useState(170);\n  const [weight, setWeight] = useState(70);\n  const [age, setAge] = useState(30);\n  const [gender, setGender] = useState('male');\n  const [activityLevel, setActivityLevel] = useState('moderate');\n  const [bmi, setBMI] = useState(null);\n  const [calories, setCalories] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n\n  const calculateBMI = useCallback(() => {\n    const bmiValue = weight / ((height / 100) * (height / 100));\n    setBMI(bmiValue.toFixed(1));\n  }, [weight, height]);\n\n  const calculateCalories = useCallback(() => {\n    let bmr;\n    if (gender === 'male') {\n      bmr = 88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age);\n    } else {\n      bmr = 447.593 + (9.247 * weight) + (3.098 * height) - (4.330 * age);\n    }\n\n    const activityFactors = {\n      sedentary: 1.2,\n      light: 1.375,\n      moderate: 1.55,\n      active: 1.725,\n      veryActive: 1.9\n    };\n\n    setCalories(Math.round(bmr * activityFactors[activityLevel]));\n  }, [weight, height, age, gender, activityLevel]);\n\n  useEffect(() => {\n    calculateBMI();\n    calculateCalories();\n  }, [calculateBMI, calculateCalories]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setShowResults(true);\n  };\n\n  return (\n    <div id=\"bmi-calculator\" className=\"bmi-calculator\">\n      <h2>Calcolatore BMI e Fabbisogno Calorico</h2>\n      <div className=\"calculator-container\">\n        <form onSubmit={handleSubmit}>\n          <motion.div className=\"input-group\" whileHover={{ scale: 1.05 }}>\n            <label htmlFor=\"height\">Altezza (cm)</label>\n            <input\n              type=\"number\"\n              id=\"height\"\n              value={height}\n              onChange={(e) => setHeight(e.target.value)}\n            />\n          </motion.div>\n          <motion.div className=\"input-group\" whileHover={{ scale: 1.05 }}>\n            <label htmlFor=\"weight\">Peso (kg)</label>\n            <input\n              type=\"number\"\n              id=\"weight\"\n              value={weight}\n              onChange={(e) => setWeight(e.target.value)}\n            />\n          </motion.div>\n          <motion.div className=\"input-group\" whileHover={{ scale: 1.05 }}>\n            <label htmlFor=\"age\">Età</label>\n            <input\n              type=\"number\"\n              id=\"age\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n            />\n          </motion.div>\n          <motion.div className=\"input-group\" whileHover={{ scale: 1.05 }}>\n            <label>Genere</label>\n            <div className=\"radio-group\">\n              <input\n                type=\"radio\"\n                id=\"male\"\n                value=\"male\"\n                checked={gender === 'male'}\n                onChange={(e) => setGender(e.target.value)}\n              />\n              <label htmlFor=\"male\">Maschio</label>\n              <input\n                type=\"radio\"\n                id=\"female\"\n                value=\"female\"\n                checked={gender === 'female'}\n                onChange={(e) => setGender(e.target.value)}\n              />\n              <label htmlFor=\"female\">Femmina</label>\n            </div>\n          </motion.div>\n          <motion.div className=\"input-group\" whileHover={{ scale: 1.05 }}>\n            <label htmlFor=\"activity\">Livello di Attività</label>\n            <select\n              id=\"activity\"\n              value={activityLevel}\n              onChange={(e) => setActivityLevel(e.target.value)}\n            >\n              <option value=\"sedentary\">Sedentario</option>\n              <option value=\"light\">Leggera attività</option>\n              <option value=\"moderate\">Moderata attività</option>\n              <option value=\"active\">Attiva</option>\n              <option value=\"veryActive\">Molto attiva</option>\n            </select>\n          </motion.div>\n          <motion.button\n            type=\"submit\"\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n          >\n            Calcola\n          </motion.button>\n          </form>\n        <AnimatePresence>\n          {showResults && (\n            <motion.div\n              className=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n            >\n              <h3>Risultati</h3>\n              <p>Il tuo BMI è: {bmi}</p>\n              <p>Il tuo fabbisogno calorico giornaliero è: {calories} kcal</p>\n              <div className=\"bmi-visualizer\">\n                <Canvas>\n                  <BMIVisualizer bmi={bmi} />\n                </Canvas>\n              </div>\n              <div className=\"chart-container\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={generateCalorieData()}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Line type=\"monotone\" dataKey=\"calories\" stroke=\"#8884d8\" />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n              <motion.a\n                href=\"https://docs.google.com/forms/d/1DNV4ILY1yXnH-Vbkdhk5ZdRSRA0RkFT4sX8rT8HbN9E/edit\"\n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"cta-button\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                Ottieni una consulenza personalizzata\n              </motion.a>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nconst BMIVisualizer = ({ bmi }) => {\n  const meshRef = useRef();\n  \n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x += 0.01;\n      meshRef.current.rotation.y += 0.01;\n    }\n  });\n\n  const getColor = () => {\n    if (bmi < 18.5) return 'blue';\n    if (bmi < 25) return 'green';\n    if (bmi < 30) return 'yellow';\n    return 'red';\n  };\n\n  return (\n    <mesh ref={meshRef} scale={[0.4, 0.4, 0.4]}>\n      <sphereGeometry args={[1, 32, 32]} />\n      <meshStandardMaterial color={getColor()} />\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n    </mesh>\n  );\n};\n\nconst generateCalorieData = () => {\n  const data = [];\n  for (let i = -500; i <= 500; i += 100) {\n    data.push({\n      name: i < 0 ? `${i}` : `+${i}`,\n      calories: 2000 + i,\n    });\n  }\n  return data;\n};\n\nexport default BMICalculator;\n","import React from 'react';\nimport BMICalculator from './BMICalculator';\n\nconst BMIPage = () => {\n  return (\n    <div className=\"bmi-page\">\n      <h1>Calcolatore BMI</h1>\n      <BMICalculator />\n    </div>\n  );\n};\n\nexport default BMIPage;"],"names":["BMIVisualizer","_ref","bmi","meshRef","useRef","useFrame","current","rotation","x","y","_jsxs","ref","scale","children","_jsx","args","color","intensity","position","generateCalorieData","data","i","push","name","calories","BMICalculator","height","setHeight","useState","weight","setWeight","age","setAge","gender","setGender","activityLevel","setActivityLevel","setBMI","setCalories","showResults","setShowResults","calculateBMI","useCallback","toFixed","calculateCalories","bmr","Math","round","sedentary","light","moderate","active","veryActive","useEffect","id","className","onSubmit","e","preventDefault","motion","div","whileHover","htmlFor","type","value","onChange","target","checked","button","whileTap","AnimatePresence","initial","opacity","animate","exit","Canvas","ResponsiveContainer","width","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","a","href","rel","BMIPage"],"sourceRoot":""}
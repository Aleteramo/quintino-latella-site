{"version":3,"file":"static/js/299.5a0dc153.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.5.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.5.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.5.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PresenceContext","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","requestAnimationFrame","noop","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","invariant","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","x","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","padding","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","clearTime","time","newTime","queueMicrotask","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","getWillChangeName","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","isMotionValue","addValueToWillChange","applyWillChange","willChange","style","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","isActive","prevResolvedValues","createState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionContext","LazyContext","strict","scheduleHandoffComplete","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","updateFeatures","completeHandoff","allowProjection","useMotionRef","externalRef","isControllingVariants","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","addWillChange","memberName","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement","any","useLayoutEffect"],"sourceRoot":""}